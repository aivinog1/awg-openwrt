name: Build AmneziaWG (OpenWrt SDK 23.05.6 / mediatek/filogic)

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OWRT_VER: "23.05.6"
      TARGET: "mediatek"
      SUBTARGET: "filogic"
      ARCH: "aarch64_cortex-a53"
      SDK_FILE: "openwrt-sdk-23.05.6-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
      SDK_URL: "https://downloads.openwrt.org/releases/23.05.6/targets/mediatek/filogic/"

    steps:
      - name: Checkout (this repo for workflow & releases)
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential gawk gettext libncurses5-dev libssl-dev \
            unzip zlib1g-dev file wget rsync python3 ca-certificates

      - name: Download SDK
        run: |
          set -euo pipefail
          wget -q "${SDK_URL}${SDK_FILE}"
          tar -xf "${SDK_FILE}"
          # Переименуем папку SDK в короткое имя
          mv openwrt-sdk-* sdk

      - name: Cache SDK dl/
        uses: actions/cache@v4
        with:
          path: sdk/dl
          key: dl-${{ env.OWRT_VER }}-${{ env.TARGET }}-${{ env.SUBTARGET }}

      - name: Add AWG feed & update
        working-directory: sdk
        run: |
          set -euo pipefail
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> feeds.conf.default
          ./scripts/feeds update -a
          # Ставим только нужные пакеты из нашего фида
          ./scripts/feeds install -p awgopenwrt kmod-amneziawg amneziawg-tools luci-app-amneziawg

      - name: Prepare .config (enable packages)
        working-directory: sdk
        run: |
          set -euo pipefail
          {
            echo "CONFIG_PACKAGE_kmod-amneziawg=m"
            echo "CONFIG_PACKAGE_amneziawg-tools=y"
            echo "CONFIG_PACKAGE_luci-app-amneziawg=y"
          } >> .config
          make defconfig

      - name: Build packages (SDK)
        working-directory: sdk
        run: |
          set -euo pipefail
          make -j"$(nproc)" package/kmod-amneziawg/compile V=s
          make -j"$(nproc)" package/amneziawg-tools/compile V=s
          make -j"$(nproc)" package/luci-app-amneziawg/compile V=s

      - name: Show vermagic used (diagnostics)
        working-directory: sdk
        run: |
          set -euo pipefail
          find build_dir -name .vermagic -exec sh -c 'echo -n "vermagic: "; cat "$1"' _ {} \; || true

      - name: Collect artifacts
        working-directory: sdk
        run: |
          set -euo pipefail
          mkdir -p ../awgrelease
          find bin -type f -name 'kmod-amneziawg_*.ipk' -exec cp -v {} ../awgrelease/ \;
          find bin -type f -name 'amneziawg-tools_*.ipk' -exec cp -v {} ../awgrelease/ \;
          find bin -type f -name 'luci-app-amneziawg_*.ipk' -exec cp -v {} ../awgrelease/ \;
          ls -l ../awgrelease

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-${{ env.OWRT_VER }}-${{ env.TARGET }}-${{ env.SUBTARGET }}
          path: awgrelease/*.ipk

      - name: Release (only on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
